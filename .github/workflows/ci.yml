name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust:
    name: Rust checks on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2

      - name: Check version consistency
        if: runner.os == 'Linux'
        run: ./scripts/check_versions.sh
        shell: bash

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Lint with xclippy (strict)
        run: cargo xclippy

      - name: Install cargo-machete
        if: runner.os == 'Linux'
        run: cargo install cargo-machete

      - name: Check for unused dependencies
        if: runner.os == 'Linux'
        run: cargo machete --skip-target-dir

      - name: Check examples compilation
        run: cargo check --examples

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features --quiet

      - name: Install cargo-readme
        if: runner.os == 'Linux'
        run: cargo install cargo-readme

      - name: Check README.md is up to date
        if: runner.os == 'Linux'
        run: |
          cargo readme --no-license > /tmp/README.md
          diff -q /tmp/README.md README.md
        shell: bash
