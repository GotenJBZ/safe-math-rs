error[E0277]: the trait bound `Foo: CheckedAdd` is not satisfied
 --> tests/ui/bad_derive_missing_checked_trait_unused.rs:4:27
  |
4 | #[derive(Debug,Copy,Clone,SafeMathOps)]
  |                           ^^^^^^^^^^^ the trait `CheckedAdd` is not implemented for `Foo`
  |
  = help: the following other types implement trait `CheckedAdd`:
            i128
            i16
            i32
            i64
            i8
            isize
            u128
            u16
          and $N others
  = help: see issue #48214
  = note: this error originates in the derive macro `SafeMathOps` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: Type `Foo` cannot perform safe addition.
 --> tests/ui/bad_derive_missing_checked_trait_unused.rs:4:27
  |
4 | #[derive(Debug,Copy,Clone,SafeMathOps)]
  |                           ^^^^^^^^^^^ the trait `SafeAdd` is not implemented for `Foo`
  |
  = note: Add `add` to `#[SafeMathOps(...)]` when deriving `SafeMathOps`.
  = note: this error originates in the derive macro `SafeMathOps` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `checked_add` found for struct `Foo` in the current scope
 --> tests/ui/bad_derive_missing_checked_trait_unused.rs:4:27
  |
4 | #[derive(Debug,Copy,Clone,SafeMathOps)]
  |                           ^^^^^^^^^^^ method not found in `Foo`
5 | #[SafeMathOps(add)]
6 | struct Foo(i32);
  | ---------- method `checked_add` not found for this struct
  |
 ::: $CARGO/num-traits-0.2.19/src/ops/checked.rs
  |
  |     fn checked_add(&self, v: &Self) -> Option<Self>;
  |        ----------- the method is available for `Foo` here
  |
  = help: items from traits can only be used if the trait is in scope
  = note: this error originates in the derive macro `SafeMathOps` (in Nightly builds, run with -Z macro-backtrace for more info)
help: trait `CheckedAdd` which provides `checked_add` is implemented but not in scope; perhaps you want to import it
  |
1 + use num_traits::CheckedAdd;
  |
